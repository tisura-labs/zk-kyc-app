fn main(message : [Field; 32], index : Field, hashpath : [Field; 2], root : Field) {
    let leaf = std::hash::hash_to_field(message.as_slice());
    let merkle_root = std::merkle::compute_merkle_root(leaf, index, hashpath);
    println(merkle_root);
    println(root);
    assert(merkle_root == root);
}

#[test]
fn test_main() {
    // let message = [0,0,0,98];
    // let index = 1;
    // let hashpath = [0,0,0,979561243718986874154500634714296567597651788001641782680406714061934623036,17878552432622669308686082593405372383821725917304700610402286248242339080753,11838199490367597033970711738091009427907033962128204438155074204728782925783];
    // let root = 1277622192782317409293366625599838563689881052624439852014371595866377173488;

    let message = [142,191,81,123,155,132,153,136,212,156,236,44,90,48,13,14,239,92,82,79,190,6,5,233,24,240,4,181,121,174,160,110];
    let index = 1;
    let hashpath = [4081908665086516645856998306010837687387623653249920628185784303876322511035,20416647926263229280934542975981796328833540234259740409921266188209721391415];
    let root = 6223061963292916390713519458160138322733126463474298894020533783858191020691;

    main(message, index, hashpath, root);
}
